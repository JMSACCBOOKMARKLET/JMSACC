```javascript
javascript:(function () {
  var doc = document
  var body = doc.body
  var mouseX, mouseY = 0
  var bullets = []
  var enemies = []
  var score = 0
  var gameOver = false
  var WIDTH = doc.documentElement.clientWidth
  var HEIGHT = doc.documentElement.clientHeight

  // Create canvas element
  var canvas = doc.createElement('canvas')
  canvas.width = WIDTH
  canvas.height = HEIGHT
  canvas.style.position = 'absolute'
  canvas.style.left = '0px'
  canvas.style.top = '0px'
  canvas.style.zIndex = '1000000'
  body.appendChild(canvas)

  // Create context object
  var ctx = canvas.getContext('2d')
  ctx.strokeStyle = 'white'
  ctx.lineWidth = 5
  ctx.font = '20px Arial'

  // Bind mouse events to update position variables
  body.addEventListener('mousemove', function (e) {
    var rect = canvas.getBoundingClientRect()
    mouseX = e.clientX - rect.left
    mouseY = e.clientY - rect.top
  })

  // Bind click to shoot bullet
  body.addEventListener('click', function () {
    if (!gameOver) {
      bullets.push({ x: WIDTH / 2, y: HEIGHT - 50 })
    }
  })

  // Helper function to reset game
  function reset() {
    bullets = []
    enemies = []
    score = 0
    gameOver = false
  }

  // Create an enemy and add it to the enemies array
  function addEnemy() {
    enemies.push({
      x: Math.random() * WIDTH,
      y: 0,
      radius: 20,
      speed: 3
    })
  }

  // Draw all game objects on current frame
  function drawFrame() {
    // Clear canvas and draw score
    ctx.clearRect(0, 0, WIDTH, HEIGHT)
    ctx.fillStyle = 'white'
    ctx.fillText('Score: ' + score, 20, 30)

    // Draw bullets and check for bullet collisions with enemies
    bullets.forEach(function (bullet, index) {
      ctx.beginPath()
      ctx.moveTo(bullet.x, bullet.y)
      ctx.lineTo(bullet.x, bullet.y - 10)
      ctx.stroke()

      // Check collisions with each enemy
      enemies.forEach(function (enemy, enemyIndex) {
        var dx = enemy.x - bullet.x
        var dy = enemy.y - bullet.y

        if (Math.sqrt(dx * dx + dy * dy) < enemy.radius) {
          enemies.splice(enemyIndex, 1)
          bullets.splice(index, 1)
          score++
        }
      })
      
      if(bullet.y < -10){
        bullets.splice(index, 1)
      }
      

      // Move bullet upscreen
      bullet.y -= 10
    })

    // Draw enemies and check for enemy collisions and screen overs
    enemies.forEach(function (enemy, index) {
      ctx.beginPath()
      ctx.arc(enemy.x, enemy.y, enemy.radius, 0, Math.PI * 2, false)
      ctx.closePath()
      ctx.stroke()

      if (enemy.y > HEIGHT + enemy.radius) {
        gameOver = true
      }

      // Detect player collision with enemy
      var dx = enemy.x - mouseX
      var dy = enemy.y - mouseY

      if (Math.sqrt(dx*dx + dy*dy) < enemy.radius) {
        gameOver = true
      }

      // Move enemy downscreen
      enemy.y += enemy.speed
    })

    // If game is not over, add an enemy on timer and request new animation frame
    if (!gameOver) {
      addEnemy()
      window.requestAnimationFrame(drawFrame)
    } else {
      // Display game over message
      ctx.fillText('GAME OVER!', WIDTH/2 - 60, HEIGHT/2)
    }
  }

  // Start first animation frame
  window.requestAnimationFrame(drawFrame)
})()
```
